{"id":"scripts/util.js","dependencies":[{"name":"/Users/gab/Desktop/gabtrembb.github.io/package.json","includedInParent":true,"mtime":1656078192612}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.range = range;\n\n/**\n * Utilitary funtion that returns an array of number in the given range, inclusively.\n *\n * @param {number} start The starting number\n * @param {number} stop The end number\n * @returns {number[]} The array with a sequence of numbers within the given range\n *\n */\nfunction range(start, stop) {\n  var res = [];\n\n  for (var i = start; i <= stop; i++) {\n    res.push(i);\n  }\n\n  return res;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"scripts/util.js","original":{"line":1,"column":0}},{"generated":{"line":16,"column":0},"source":"scripts/util.js","original":{"line":9,"column":7}},{"name":"range","generated":{"line":16,"column":9},"source":"scripts/util.js","original":{"line":9,"column":16}},{"generated":{"line":16,"column":14},"source":"scripts/util.js","original":{"line":9,"column":7}},{"name":"start","generated":{"line":16,"column":15},"source":"scripts/util.js","original":{"line":9,"column":23}},{"generated":{"line":16,"column":20},"source":"scripts/util.js","original":{"line":9,"column":7}},{"name":"stop","generated":{"line":16,"column":22},"source":"scripts/util.js","original":{"line":9,"column":30}},{"generated":{"line":16,"column":26},"source":"scripts/util.js","original":{"line":9,"column":7}},{"generated":{"line":16,"column":28},"source":"scripts/util.js","original":{"line":9,"column":36}},{"generated":{"line":17,"column":0},"source":"scripts/util.js","original":{"line":10,"column":2}},{"name":"res","generated":{"line":17,"column":6},"source":"scripts/util.js","original":{"line":10,"column":8}},{"generated":{"line":17,"column":9},"source":"scripts/util.js","original":{"line":10,"column":11}},{"generated":{"line":17,"column":12},"source":"scripts/util.js","original":{"line":10,"column":14}},{"generated":{"line":17,"column":14},"source":"scripts/util.js","original":{"line":10,"column":2}},{"generated":{"line":19,"column":0},"source":"scripts/util.js","original":{"line":11,"column":2}},{"generated":{"line":19,"column":7},"source":"scripts/util.js","original":{"line":11,"column":7}},{"name":"i","generated":{"line":19,"column":11},"source":"scripts/util.js","original":{"line":11,"column":11}},{"generated":{"line":19,"column":12},"source":"scripts/util.js","original":{"line":11,"column":12}},{"name":"start","generated":{"line":19,"column":15},"source":"scripts/util.js","original":{"line":11,"column":15}},{"generated":{"line":19,"column":20},"source":"scripts/util.js","original":{"line":11,"column":2}},{"name":"i","generated":{"line":19,"column":22},"source":"scripts/util.js","original":{"line":11,"column":22}},{"generated":{"line":19,"column":23},"source":"scripts/util.js","original":{"line":11,"column":23}},{"name":"stop","generated":{"line":19,"column":27},"source":"scripts/util.js","original":{"line":11,"column":27}},{"generated":{"line":19,"column":31},"source":"scripts/util.js","original":{"line":11,"column":2}},{"name":"i","generated":{"line":19,"column":33},"source":"scripts/util.js","original":{"line":11,"column":33}},{"generated":{"line":19,"column":34},"source":"scripts/util.js","original":{"line":11,"column":34}},{"generated":{"line":19,"column":36},"source":"scripts/util.js","original":{"line":11,"column":2}},{"generated":{"line":19,"column":38},"source":"scripts/util.js","original":{"line":11,"column":38}},{"name":"res","generated":{"line":20,"column":0},"source":"scripts/util.js","original":{"line":12,"column":4}},{"name":"res","generated":{"line":20,"column":4},"source":"scripts/util.js","original":{"line":12,"column":4}},{"generated":{"line":20,"column":7},"source":"scripts/util.js","original":{"line":12,"column":7}},{"name":"push","generated":{"line":20,"column":8},"source":"scripts/util.js","original":{"line":12,"column":8}},{"generated":{"line":20,"column":12},"source":"scripts/util.js","original":{"line":12,"column":4}},{"name":"i","generated":{"line":20,"column":13},"source":"scripts/util.js","original":{"line":12,"column":13}},{"generated":{"line":20,"column":14},"source":"scripts/util.js","original":{"line":12,"column":4}},{"generated":{"line":21,"column":0},"source":"scripts/util.js","original":{"line":13,"column":3}},{"generated":{"line":23,"column":0},"source":"scripts/util.js","original":{"line":14,"column":2}},{"name":"res","generated":{"line":23,"column":9},"source":"scripts/util.js","original":{"line":14,"column":9}},{"generated":{"line":23,"column":12},"source":"scripts/util.js","original":{"line":14,"column":2}},{"generated":{"line":24,"column":0},"source":"scripts/util.js","original":{"line":15,"column":1}}],"sources":{"scripts/util.js":"/**\n * Utilitary funtion that returns an array of number in the given range, inclusively.\n *\n * @param {number} start The starting number\n * @param {number} stop The end number\n * @returns {number[]} The array with a sequence of numbers within the given range\n *\n */\nexport function range (start, stop) {\n  const res = []\n  for (var i = start; i <= stop; i++) {\n    res.push(i)\n  }\n  return res\n}\n"},"lineCount":null}},"error":null,"hash":"e0d60b075a0b8c6b30848ceaccfe72d1","cacheData":{"env":{}}}